---
- name: Place temporary cnf file.
  ansible.builtin.template:
    src: templates/temp.cnf.j2
    dest: /etc/my.cnf
    mode: '0644'

- name: Get temp root password.
  ansible.builtin.shell: >-
    grep 'temporary password' /var/log/mysqld.log |
    awk '{print $NF}' | tail -n 1
  register: temp_root_pw

- name: Set root password.
  ansible.builtin.shell: >-
    mariadb-admin -uroot
    --password="{{ temp_root_pw.stdout }}"
    password "{{ mysql_root_password }}" proc

# Creates the guacamole user, doing via ansible causes errors when
# the Docker container tries to connect to the server
- name: Copy SQL init script.
  ansible.builtin.template:
    src: templates/init_db_user.sql.j2
    dest: /tmp/init_db_user.sql
    mode: '0644'

- name: Run init SQL script
  ansible.builtin.shell: >-
    mariadb -uroot -p="{{ mysql_root_password }}" < /tmp/init_db_user.sql

- name: Remove SQL init script.
  ansible.builtin.file:
    path: /tmp/init_db_user.sql
    state: absent

- name: Make sure /etc/mysql exists.
  ansible.builtin.file:
    path: /etc/mysql/
    state: directory

- name: Copy root.cnf.
  ansible.builtin.template:
    src: root.cnf.j2
    dest: /etc/mysql/root.cnf
    mode: '0600'
    owner: root
    group: root

- name: Make symlink of file for root db access.
  ansible.builtin.file:
    state: link
    src: /etc/mysql/root.cnf
    path: /root/.my.cnf

- name: Delete anonymous connections.
  community.mysql.mysql_user:
    name: ""
    host_all: true
    login_user: root
    state: absent

- name: Ensure test database is removed.
  community.mysql.mysql_db:
    name: test
    login_user: root
    state: absent

- name: Stop MariaDB again.
  ansible.builtin.service:
    name: mariadb
    state: stopped
    enabled: true

- name: Update bind address (Debian).
  ansible.builtin.replace:
    path: /etc/mysql/mariadb.conf.d/50-server.cnf
    regexp: 'bind-address.*=.*'
    replace: 'bind-address = 0.0.0.0'
  when: ansible_facts.os_family == 'Debian'

- name: Remove mysqld log file.
  ansible.builtin.file:
    path: /var/log/mysqld.log
    state: absent

- name: Ensure MariaDB is started.
  ansible.builtin.service:
    name: mariadb
    state: started
    enabled: true
